{
    "openapi": "3.0.0",
    "info": {
      "title": "Banking API & Banking API",
      "description": "API for managing bank accounts, transactions, users, and authentication & API for managing bank accounts and transactions",
      "version": "1.0.0"
    },
    "servers": [
      {
        "url": "http://localhost:3000/api",
        "description": "Local server"
      }
    ],
    "tags": [
      {
        "name": "BankAccounts",
        "description": "API for managing bank accounts"
      },
      {
        "name": "Transactions",
        "description": "API for managing transactions"
      },
      {
        "name": "Users",
        "description": "API for user management"
      },
      {
        "name": "Auth",
        "description": "API for authentication"
      }
    ],
    "paths": {
      "/users": {
        "get": {
          "tags": [
            "Users"
          ],
          "summary": "Get a list of users",
          "operationId": "getUsers",
          "parameters": [
            {
              "name": "search",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              },
              "description": "Search term for user names"
            },
            {
              "name": "page",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 1
              }
            },
            {
              "name": "limit",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 10
              }
            }
          ],
          "responses": {
            "200": {
              "description": "A list of users",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string"
                      },
                      "code": {
                        "type": "integer"
                      },
                      "message": {
                        "type": "string"
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/User"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/users/{id}": {
        "get": {
          "tags": [
            "Users"
          ],
          "summary": "Get a user by ID",
          "operationId": "getUserById",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "description": "The user's identifier"
            }
          ],
          "responses": {
            "200": {
              "description": "Detailed information about the user",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            },
            "400": {
              "description": "Invalid ID supplied"
            },
            "404": {
              "description": "User not found"
            }
          }
        }
      },
      "/auth/register": {
        "post": {
          "tags": [
            "Auth"
          ],
          "summary": "Register a new user",
          "operationId": "registerUser",
          "requestBody": {
            "description": "User registration data",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserCreate"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "User registered",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            },
            "404": {
              "description": "Email already registered"
            },
            "500": {
              "description": "Server error"
            }
          }
        }
      },
      "/auth/login": {
        "post": {
          "tags": [
            "Auth"
          ],
          "summary": "User login",
          "operationId": "loginUser",
          "requestBody": {
            "description": "User login credentials",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginRequest"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "User logged in",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "user": {
                            "$ref": "#/components/schemas/User"
                          },
                          "token": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Wrong password"
            },
            "404": {
              "description": "User not found"
            }
          }
        }
      },
      "/bankAccounts": {
        "get": {
          "tags": [
            "BankAccounts"
          ],
          "summary": "Get all bank accounts",
          "operationId": "getAllBankAccounts",
          "responses": {
            "200": {
              "description": "Array of bank accounts",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/BankAccount"
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Server error"
            }
          }
        },
        "post": {
          "tags": [
            "BankAccounts"
          ],
          "summary": "Create a new bank account",
          "operationId": "createBankAccount",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankAccountCreate"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Bank account created successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BankAccount"
                  }
                }
              }
            },
            "400": {
              "description": "Bad request"
            },
            "500": {
              "description": "Server error"
            }
          }
        }
      },
      "/transactions": {
        "get": {
          "tags": [
            "Transactions"
          ],
          "summary": "Get all transactions",
          "operationId": "getTransactions",
          "responses": {
            "200": {
              "description": "List of all transactions",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Transaction"
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Server error"
            }
          }
        },
        "post": {
          "tags": [
            "Transactions"
          ],
          "summary": "Create a new transaction",
          "operationId": "createTransaction",
          "requestBody": {
            "description": "Transaction data",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionCreateRequest"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Transaction created successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Transaction"
                  }
                }
              }
            },
            "400": {
              "description": "Bad request"
            },
            "404": {
              "description": "Source or destination account not found"
            },
            "500": {
              "description": "Server error"
            }
          }
        }
      },
      "/transactions/{id}": {
        "get": {
          "tags": [
            "Transactions"
          ],
          "summary": "Get a transaction by ID",
          "operationId": "getTransactionById",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              },
              "description": "Unique id of the transaction"
            }
          ],
          "responses": {
            "200": {
              "description": "Transaction data retrieved successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Transaction"
                  }
                }
              }
            },
            "400": {
              "description": "Bad request"
            },
            "404": {
              "description": "Transaction not found"
            },
            "500": {
              "description": "Server error"
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "User": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          }
        },
        "UserCreate": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "format": "email"
            },
            "password": {
              "type": "string",
              "format": "password"
            }
          }
        },
        "LoginRequest": {
          "type": "object",
          "properties": {
            "email": {
              "type": "string",
              "format": "email"
            },
            "password": {
              "type": "string",
              "format": "password"
            }
          },
          "required": [
            "email",
            "password"
          ]
        },
        "BankAccount": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "account_number": {
              "type": "string"
            },
            "owner": {
              "type": "string"
            },
            "balance": {
              "type": "number",
              "format": "float"
            }
          },
          "required": [
            "account_number",
            "owner",
            "balance"
          ]
        },
        "BankAccountCreate": {
          "type": "object",
          "properties": {
            "account_number": {
              "type": "string"
            },
            "owner": {
              "type": "string"
            },
            "balance": {
              "type": "number",
              "format": "float"
            }
          },
          "required": [
            "account_number",
            "owner"
          ]
        },
        "Transaction": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int32"
            },
            "source_account_id": {
              "type": "integer",
              "format": "int32"
            },
            "destination_account_id": {
              "type": "integer",
              "format": "int32"
            },
            "amount": {
              "type": "number",
              "format": "float"
            },
            "createdAt": {
              "type": "string",
              "format": "date-time"
            }
          },
          "required": [
            "id",
            "source_account_id",
            "destination_account_id",
            "amount"
          ]
        },
        "TransactionCreateRequest": {
          "type": "object",
          "properties": {
            "source_account_id": {
              "type": "integer",
              "format": "int32"
            },
            "destination_account_id": {
              "type": "integer",
              "format": "int32"
            },
            "amount": {
              "type": "number",
              "format": "float"
            }
          },
          "required": [
            "source_account_id",
            "destination_account_id",
            "amount"
          ]
        }
      }
    }
  }